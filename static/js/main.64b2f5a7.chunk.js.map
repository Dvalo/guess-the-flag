{"version":3,"sources":["Components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Game","props","state","countriesArr","tempAnswers","countryFlag","correctAnswer","playerGuess","currentStreak","handleClick","bind","axios","get","then","response","setState","data","getGameCountries","catch","error","console","log","this","length","randomCountry","Math","floor","random","includes","push","randCorrectAnswer","alpha2Code","name","answer","answerDiv","document","getElementById","className","innerHTML","classList","add","e","target","dataset","value","handleAnswer","newRound","id","src","toLowerCase","alt","map","country","i","data-value","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"0QAsGeA,E,kDAlGX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,aAAc,GACdC,YAAa,GACbC,YAAa,GACbC,cAAe,GACfC,YAAa,GACbC,cAAe,GAEnB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAVJ,E,gEAaE,IAAD,OAChBC,IACGC,IAAI,wCACJC,MAAK,SAACC,GACL,EAAKC,SAAS,CAAEZ,aAAcW,EAASE,OACvC,EAAKC,sBAENC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,Q,yCAMhC,IAHgB,IAAD,EACuBG,KAAKpB,MAAnCC,EADO,EACPA,aAAcC,EADP,EACOA,YAEfA,EAAYmB,OAAS,GAAG,CAC3B,IAAIC,EAAgBrB,EAAasB,KAAKC,MAAMD,KAAKE,SAAWxB,EAAaoB,SACrEnB,EAAYwB,SAASJ,IACrBpB,EAAYyB,KAAKL,GAGzB,IAAIM,EAAoB1B,EAAYqB,KAAKC,MAAMD,KAAKE,SAAWvB,EAAYmB,SAC3ED,KAAKP,SAAS,CAAEV,YAAayB,EAAkBC,WAAYzB,cAAewB,EAAkBE,S,iCAI5FV,KAAKP,SAAS,CACVX,YAAa,GACbC,YAAa,GACbC,cAAe,GACfC,YAAa,KACd,WACCe,KAAKL,wB,mCAIAgB,GACT,IAAMC,EAAYC,SAASC,eAAe,gBAC1CF,EAAUG,UAAY,aAClBJ,GACAC,EAAUI,UAAY,UACtBJ,EAAUK,UAAUC,IAAI,WACxBlB,KAAKP,SAAS,CAAEP,cAAec,KAAKpB,MAAMM,cAAgB,MAE1D0B,EAAUI,UAAY,YACtBJ,EAAUK,UAAUC,IAAI,aACxBlB,KAAKP,SAAS,CAAEP,cAAe,O,kCAI3BiC,GACcA,EAAEC,OAAOC,QAAQC,QACftB,KAAKpB,MAAMI,cAC/BgB,KAAKuB,cAAa,GAElBvB,KAAKuB,cAAa,GAEtBvB,KAAKwB,a,+BAGC,IAAD,EAC+CxB,KAAKpB,MAAjDE,EADH,EACGA,YAAaC,EADhB,EACgBA,YAAaG,EAD7B,EAC6BA,cAClC,OACE,sBAAK6B,UAAU,eAAf,UACE,sBAAKA,UAAU,0BAAf,UACI,qBAAKA,UAAU,aAAaU,GAAG,eAA/B,uBACA,sBAAKV,UAAU,cAAf,6BAA8C7B,QAGlD,sBAAK6B,UAAU,uBAAf,UAEKhC,EAAc,qBAAK2C,IAAG,sCAAiC3C,EAAY4C,cAA7C,QAAkEZ,UAAU,eAAea,IAAI,iBAAoB,MAC1I,qBAAKb,UAAU,kBAAf,SACMjC,EAAY+C,KAAI,SAASC,EAASC,GAChC,OACI,qBAAKhB,UAAU,SAASiB,aAAYF,EAAQpB,KAAMuB,QAASjC,KAAKb,YAAhE,SACK2C,EAAQpB,MADqEoB,EAAQpB,QAIhGV,kB,GA3FHkC,IAAMC,W,MCSVC,MARf,WACE,OACE,qBAAKrB,UAAU,MAAf,SACE,cAAC,EAAD,OCKSsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhD,MAAK,YAAkD,IAA/CiD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASC,eAAe,SAM1BuB,M","file":"static/js/main.64b2f5a7.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            countriesArr: [],\r\n            tempAnswers: [],\r\n            countryFlag: '',\r\n            correctAnswer: '',\r\n            playerGuess: '',\r\n            currentStreak: 0\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios\r\n          .get(\"https://restcountries.eu/rest/v2/all\")\r\n          .then((response) => {\r\n            this.setState({ countriesArr: response.data });\r\n            this.getGameCountries();\r\n          })\r\n          .catch((error) => console.log(error));\r\n    }\r\n\r\n    getGameCountries() {\r\n        const { countriesArr, tempAnswers } = this.state;\r\n\r\n        while (tempAnswers.length < 4) {\r\n            let randomCountry = countriesArr[Math.floor(Math.random() * countriesArr.length)];\r\n            if(!tempAnswers.includes(randomCountry)) {\r\n                tempAnswers.push(randomCountry);\r\n            }\r\n        }\r\n        let randCorrectAnswer = tempAnswers[Math.floor(Math.random() * tempAnswers.length)]\r\n        this.setState({ countryFlag: randCorrectAnswer.alpha2Code, correctAnswer: randCorrectAnswer.name });\r\n    }\r\n\r\n    newRound() {\r\n        this.setState({\r\n            tempAnswers: [],\r\n            countryFlag: '',\r\n            correctAnswer: '',\r\n            playerGuess: ''\r\n        }, function() {\r\n            this.getGameCountries();\r\n        });\r\n    }\r\n\r\n    handleAnswer(answer) {\r\n        const answerDiv = document.getElementById(\"answer-field\");\r\n        answerDiv.className = \"game-title\";\r\n        if (answer) {\r\n            answerDiv.innerHTML = \"Correct\";\r\n            answerDiv.classList.add(\"correct\");\r\n            this.setState({ currentStreak: this.state.currentStreak + 1});\r\n        } else {\r\n            answerDiv.innerHTML = \"Incorrect\";\r\n            answerDiv.classList.add(\"incorrect\");\r\n            this.setState({ currentStreak: 0});\r\n        }\r\n    }\r\n\r\n    handleClick(e) {\r\n        let playerSelection = e.target.dataset.value;\r\n        if (playerSelection === this.state.correctAnswer) {\r\n            this.handleAnswer(true);\r\n        } else {\r\n            this.handleAnswer(false);\r\n        }\r\n        this.newRound();\r\n    }\r\n\r\n    render() {\r\n        const { tempAnswers, countryFlag, currentStreak } = this.state;\r\n        return (\r\n          <div className=\"game-wrapper\">\r\n            <div className=\"game-details game-inner\">\r\n                <div className=\"game-title\" id=\"answer-field\">Flag Quiz</div>\r\n                <div className=\"game-streak\">Current Streak: {currentStreak}</div>\r\n            </div>  \r\n          \r\n            <div className=\"game-quiz game-inner\">\r\n                {/* {this.state.countryFlag ? <img src={this.state.countryFlag} className=\"country-flag\" alt=\"country_flag\" /> : 'not'} */}\r\n                {countryFlag ? <img src={`https://flagcdn.com/256x192/${countryFlag.toLowerCase()}.png`} className=\"country-flag\" alt=\"country_flag\" /> : 'not'}\r\n                <div className=\"country-choices\">\r\n                    { tempAnswers.map(function(country, i){\r\n                        return (\r\n                            <div className=\"choice\" data-value={country.name} onClick={this.handleClick} key={country.name}>\r\n                                {country.name}\r\n                            </div>\r\n                        )\r\n                    },this) }\r\n                </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default Game;","import Game from './Components/Game';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}